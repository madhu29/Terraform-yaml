# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV3@3
  displayName: 'tearraform init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'Pay-As-You-Go (6639734e-66ce-4540-adc9-62b2465bcc4c)'
    backendAzureRmResourceGroupName: 'stg'
    backendAzureRmStorageAccountName: 'tfstg29'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformTaskV3@3
  displayName: 'terrafrom plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'Pay-As-You-Go (6639734e-66ce-4540-adc9-62b2465bcc4c)'

- task: TerraformTaskV3@3
  displayName: 'terraform validate'
  inputs:
    provider: 'azurerm'
    command: 'validate'

- task: TerraformTaskV3@3
  displayName: 'terraform apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: '--auto-approve'
    environmentServiceNameAzureRM: 'Pay-As-You-Go (6639734e-66ce-4540-adc9-62b2465bcc4c)'